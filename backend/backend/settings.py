"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# import django
# django.setup()
# from profiles.models import Profile
# import rest_framework.authentication

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$h34r7g=2514#b$=6r1+do&1ezu!#mmfhgm5o1pwwj&6lm$n(e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'profiles.apps.ProfilesConfig',
    'products.apps.ProductsConfig',
    'cart.apps.CartConfig',
    'order.apps.OrderConfig',

    'rest_framework',
    'corsheaders',
    'rest_framework.authtoken',
    'djoser',
]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:8080',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Asia/Vladivostok'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'
STATICFILES_DIRS = [BASE_DIR / 'backend/static']

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'profiles.Profile'
DJOSER = {
    'SERIALIZERS': {
        'user': 'profiles.serializers.SpecialUserSerializer',
        'current_user': 'profiles.serializers.SpecialUserSerializer',
        # 'user_create': 'profiles.serializers.UserRegistrationSerializer',
    },
    'PERMISSIONS': {
        'user': ['rest_framework.permissions.AllowAny'],
    },
    # 'PERMISSIONS': {
    #     'activation': ['rest_framework.permissions.AllowAny'],
    #     'password_reset': ['rest_framework.permissions.AllowAny'],
    #     'password_reset_confirm': ['rest_framework.permissions.AllowAny'],
    #     # 'set_password': ['rest_framework.permissions.CurrentUserOrAdmin'],
    #     'username_reset': ['rest_framework.permissions.AllowAny'],
    #     'username_reset_confirm': ['rest_framework.permissions.AllowAny'],
    #     # 'set_username': ['rest_framework.permissions.CurrentUserOrAdmin'],
    #     'user_create': ['rest_framework.permissions.AllowAny'],
    #     # 'user_delete': ['rest_framework.permissions.CurrentUserOrAdmin'],
    #     # 'user': ['rest_framework.permissions.CurrentUserOrAdmin'],
    #     # 'user_list': ['rest_framework.permissions.CurrentUserOrAdmin'],
    #     'token_create': ['rest_framework.permissions.AllowAny'],
    #     'token_destroy': ['rest_framework.permissions.IsAuthenticated'],
    # }
}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}
# LOGIN_REDIRECT_URL = 'homepage'
#
CART_SESSION_ID = 'cart'
# SESSION_COOKIE_AGE = 86400
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False


# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         # 'rest_framework.authentication.BasicAuthentication',
#         # 'rest_framework.authentication.SessionAuthentication',
#         'rest_framework.authentication.TokenAuthentication',
#         # 'rest_framework_simplejwt.authentication.JWTAuthentication',
#
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#         # 'rest_framework.permissions.IsAuthenticated',
#         # 'rest_framework.permissions.IsAdminUser'
#         'rest_framework.permissions.AllowAny',
#     ],
#
#     'TEST_REQUEST_RENDERER_CLASSES': [
#         'rest_framework.renderers.MultiPartRenderer',
#         'rest_framework.renderers.JSONRenderer',
#         'rest_framework.renderers.TemplateHTMLRenderer'
#     ],
# 'DEFAULT_THROTTLE_CLASSES': [
#     'rest_framework.throttling.ScopedRateThrottle',
# ],
# 'DEFAULT_THROTTLE_RATES': {
#     'cars_app': '50/day',
#     'first_app': '4/day'
# }
# ,
# 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
# 'PAGE_SIZE': 2

# }
# ACCOUNT_AUTHENTICATION_METHOD = 'phone_number'
# ACCOUNT_PHONE_NUMBER_REQUIRED = True
# ACCOUNT_UNIQUE_PHONE_NUMBER = True
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
# ACCOUNT_USERNAME_REQUIRED = False
#
# REST_AUTH_REGISTER_SERIALIZERS = {
#     'REGISTER_SERIALIZER': 'profiles.serializers.ProfileRegisterSerializer',
# }
#
# ACCOUNT_ADAPTER = 'users.adapter.ProfileAccountAdapter'
#
# REST_AUTH_SERIALIZERS = {
#     'USER_DETAILS_SERIALIZER': 'profiles.serializers.ProfileSerializer'
# }
